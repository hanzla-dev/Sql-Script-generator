{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport ListGroupItem from './ListGroupItem';\nimport { bsClass, getClassSet, splitBsProps } from './utils/bootstrapUtils';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\nvar propTypes = {\n  /**\n   * You can use a custom element type for this component.\n   *\n   * If not specified, it will be treated as `'li'` if every child is a\n   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n   */\n  componentClass: elementType\n};\nfunction getDefaultComponent(children) {\n  if (!children) {\n    // FIXME: This is the old behavior. Is this right?\n    return 'div';\n  }\n  if (ValidComponentChildren.some(children, function (child) {\n    return child.type !== ListGroupItem || child.props.href || child.props.onClick;\n  })) {\n    return 'div';\n  }\n  return 'ul';\n}\nvar ListGroup = function (_React$Component) {\n  _inherits(ListGroup, _React$Component);\n  function ListGroup() {\n    _classCallCheck(this, ListGroup);\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n  ListGroup.prototype.render = function render() {\n    var _props = this.props,\n      children = _props.children,\n      _props$componentClass = _props.componentClass,\n      Component = _props$componentClass === undefined ? getDefaultComponent(children) : _props$componentClass,\n      className = _props.className,\n      props = _objectWithoutProperties(_props, ['children', 'componentClass', 'className']);\n    var _splitBsProps = splitBsProps(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    var classes = getClassSet(bsProps);\n    var useListItem = Component === 'ul' && ValidComponentChildren.every(children, function (child) {\n      return child.type === ListGroupItem;\n    });\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }), useListItem ? ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        listItem: true\n      });\n    }) : children);\n  };\n  return ListGroup;\n}(React.Component);\nListGroup.propTypes = propTypes;\nexport default bsClass('list-group', ListGroup);","map":{"version":3,"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","classNames","React","cloneElement","elementType","ListGroupItem","bsClass","getClassSet","splitBsProps","ValidComponentChildren","propTypes","componentClass","getDefaultComponent","children","some","child","type","props","href","onClick","ListGroup","_React$Component","apply","arguments","prototype","render","_props","_props$componentClass","Component","undefined","className","_splitBsProps","bsProps","elementProps","classes","useListItem","every","createElement","map","listItem"],"sources":["F:/Software Engineering/Web development/xampp/htdocs/Sql-Script-generator/WebApp/WebApp/ClientApp/node_modules/react-bootstrap/es/ListGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport elementType from 'prop-types-extra/lib/elementType';\n\nimport ListGroupItem from './ListGroupItem';\nimport { bsClass, getClassSet, splitBsProps } from './utils/bootstrapUtils';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\n\nvar propTypes = {\n  /**\n   * You can use a custom element type for this component.\n   *\n   * If not specified, it will be treated as `'li'` if every child is a\n   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n   */\n  componentClass: elementType\n};\n\nfunction getDefaultComponent(children) {\n  if (!children) {\n    // FIXME: This is the old behavior. Is this right?\n    return 'div';\n  }\n\n  if (ValidComponentChildren.some(children, function (child) {\n    return child.type !== ListGroupItem || child.props.href || child.props.onClick;\n  })) {\n    return 'div';\n  }\n\n  return 'ul';\n}\n\nvar ListGroup = function (_React$Component) {\n  _inherits(ListGroup, _React$Component);\n\n  function ListGroup() {\n    _classCallCheck(this, ListGroup);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  ListGroup.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        _props$componentClass = _props.componentClass,\n        Component = _props$componentClass === undefined ? getDefaultComponent(children) : _props$componentClass,\n        className = _props.className,\n        props = _objectWithoutProperties(_props, ['children', 'componentClass', 'className']);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    var useListItem = Component === 'ul' && ValidComponentChildren.every(children, function (child) {\n      return child.type === ListGroupItem;\n    });\n\n    return React.createElement(\n      Component,\n      _extends({}, elementProps, {\n        className: classNames(className, classes)\n      }),\n      useListItem ? ValidComponentChildren.map(children, function (child) {\n        return cloneElement(child, { listItem: true });\n      }) : children\n    );\n  };\n\n  return ListGroup;\n}(React.Component);\n\nListGroup.propTypes = propTypes;\n\nexport default bsClass('list-group', ListGroup);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}