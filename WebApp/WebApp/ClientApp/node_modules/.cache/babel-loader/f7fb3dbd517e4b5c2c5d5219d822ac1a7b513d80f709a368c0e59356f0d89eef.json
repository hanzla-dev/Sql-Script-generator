{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport Dropdown from './Dropdown';\nimport SplitToggle from './SplitToggle';\nimport splitComponentProps from './utils/splitComponentProps';\nvar propTypes = _extends({}, Dropdown.propTypes, {\n  // Toggle props.\n  bsStyle: PropTypes.string,\n  bsSize: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  /**\n   * The content of the split button.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n  // Override generated docs from <Dropdown>.\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\nvar SplitButton = function (_React$Component) {\n  _inherits(SplitButton, _React$Component);\n  function SplitButton() {\n    _classCallCheck(this, SplitButton);\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n  SplitButton.prototype.render = function render() {\n    var _props = this.props,\n      bsSize = _props.bsSize,\n      bsStyle = _props.bsStyle,\n      title = _props.title,\n      toggleLabel = _props.toggleLabel,\n      children = _props.children,\n      props = _objectWithoutProperties(_props, ['bsSize', 'bsStyle', 'title', 'toggleLabel', 'children']);\n    var _splitComponentProps = splitComponentProps(props, Dropdown.ControlledComponent),\n      dropdownProps = _splitComponentProps[0],\n      buttonProps = _splitComponentProps[1];\n    return React.createElement(Dropdown, _extends({}, dropdownProps, {\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(Button, _extends({}, buttonProps, {\n      disabled: props.disabled,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), title), React.createElement(SplitToggle, {\n      'aria-label': toggleLabel || title,\n      bsSize: bsSize,\n      bsStyle: bsStyle\n    }), React.createElement(Dropdown.Menu, null, children));\n  };\n  return SplitButton;\n}(React.Component);\nSplitButton.propTypes = propTypes;\nSplitButton.Toggle = SplitToggle;\nexport default SplitButton;","map":{"version":3,"names":["_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","_extends","React","PropTypes","Button","Dropdown","SplitToggle","splitComponentProps","propTypes","bsStyle","string","bsSize","href","onClick","func","title","node","isRequired","toggleLabel","children","SplitButton","_React$Component","apply","arguments","prototype","render","_props","props","_splitComponentProps","ControlledComponent","dropdownProps","buttonProps","createElement","disabled","Menu","Component","Toggle"],"sources":["F:/Software Engineering/Web development/xampp/htdocs/Sql-Script-generator/WebApp/WebApp/ClientApp/node_modules/react-bootstrap/es/SplitButton.js"],"sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button';\nimport Dropdown from './Dropdown';\nimport SplitToggle from './SplitToggle';\nimport splitComponentProps from './utils/splitComponentProps';\n\nvar propTypes = _extends({}, Dropdown.propTypes, {\n\n  // Toggle props.\n  bsStyle: PropTypes.string,\n  bsSize: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  /**\n   * The content of the split button.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  // Override generated docs from <Dropdown>.\n  /**\n   * @private\n   */\n  children: PropTypes.node\n});\n\nvar SplitButton = function (_React$Component) {\n  _inherits(SplitButton, _React$Component);\n\n  function SplitButton() {\n    _classCallCheck(this, SplitButton);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  SplitButton.prototype.render = function render() {\n    var _props = this.props,\n        bsSize = _props.bsSize,\n        bsStyle = _props.bsStyle,\n        title = _props.title,\n        toggleLabel = _props.toggleLabel,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, ['bsSize', 'bsStyle', 'title', 'toggleLabel', 'children']);\n\n    var _splitComponentProps = splitComponentProps(props, Dropdown.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        buttonProps = _splitComponentProps[1];\n\n    return React.createElement(\n      Dropdown,\n      _extends({}, dropdownProps, {\n        bsSize: bsSize,\n        bsStyle: bsStyle\n      }),\n      React.createElement(\n        Button,\n        _extends({}, buttonProps, {\n          disabled: props.disabled,\n          bsSize: bsSize,\n          bsStyle: bsStyle\n        }),\n        title\n      ),\n      React.createElement(SplitToggle, {\n        'aria-label': toggleLabel || title,\n        bsSize: bsSize,\n        bsStyle: bsStyle\n      }),\n      React.createElement(\n        Dropdown.Menu,\n        null,\n        children\n      )\n    );\n  };\n\n  return SplitButton;\n}(React.Component);\n\nSplitButton.propTypes = propTypes;\n\nSplitButton.Toggle = SplitToggle;\n\nexport default SplitButton;"],"mappings":"AAAA,OAAOA,wBAAwB,MAAM,+CAA+C;AACpF,OAAOC,eAAe,MAAM,sCAAsC;AAClE,OAAOC,0BAA0B,MAAM,iDAAiD;AACxF,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,mBAAmB,MAAM,6BAA6B;AAE7D,IAAIC,SAAS,GAAGP,QAAQ,CAAC,CAAC,CAAC,EAAEI,QAAQ,CAACG,SAAS,EAAE;EAE/C;EACAC,OAAO,EAAEN,SAAS,CAACO,MAAM;EACzBC,MAAM,EAAER,SAAS,CAACO,MAAM;EACxBE,IAAI,EAAET,SAAS,CAACO,MAAM;EACtBG,OAAO,EAAEV,SAAS,CAACW,IAAI;EACvB;AACF;AACA;EACEC,KAAK,EAAEZ,SAAS,CAACa,IAAI,CAACC,UAAU;EAChC;AACF;AACA;EACEC,WAAW,EAAEf,SAAS,CAACO,MAAM;EAE7B;EACA;AACF;AACA;EACES,QAAQ,EAAEhB,SAAS,CAACa;AACtB,CAAC,CAAC;AAEF,IAAII,WAAW,GAAG,UAAUC,gBAAgB,EAAE;EAC5CrB,SAAS,CAACoB,WAAW,EAAEC,gBAAgB,CAAC;EAExC,SAASD,WAAWA,CAAA,EAAG;IACrBtB,eAAe,CAAC,IAAI,EAAEsB,WAAW,CAAC;IAElC,OAAOrB,0BAA0B,CAAC,IAAI,EAAEsB,gBAAgB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;EAClF;EAEAH,WAAW,CAACI,SAAS,CAACC,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC/C,IAAIC,MAAM,GAAG,IAAI,CAACC,KAAK;MACnBhB,MAAM,GAAGe,MAAM,CAACf,MAAM;MACtBF,OAAO,GAAGiB,MAAM,CAACjB,OAAO;MACxBM,KAAK,GAAGW,MAAM,CAACX,KAAK;MACpBG,WAAW,GAAGQ,MAAM,CAACR,WAAW;MAChCC,QAAQ,GAAGO,MAAM,CAACP,QAAQ;MAC1BQ,KAAK,GAAG9B,wBAAwB,CAAC6B,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAEvG,IAAIE,oBAAoB,GAAGrB,mBAAmB,CAACoB,KAAK,EAAEtB,QAAQ,CAACwB,mBAAmB,CAAC;MAC/EC,aAAa,GAAGF,oBAAoB,CAAC,CAAC,CAAC;MACvCG,WAAW,GAAGH,oBAAoB,CAAC,CAAC,CAAC;IAEzC,OAAO1B,KAAK,CAAC8B,aAAa,CACxB3B,QAAQ,EACRJ,QAAQ,CAAC,CAAC,CAAC,EAAE6B,aAAa,EAAE;MAC1BnB,MAAM,EAAEA,MAAM;MACdF,OAAO,EAAEA;IACX,CAAC,CAAC,EACFP,KAAK,CAAC8B,aAAa,CACjB5B,MAAM,EACNH,QAAQ,CAAC,CAAC,CAAC,EAAE8B,WAAW,EAAE;MACxBE,QAAQ,EAAEN,KAAK,CAACM,QAAQ;MACxBtB,MAAM,EAAEA,MAAM;MACdF,OAAO,EAAEA;IACX,CAAC,CAAC,EACFM,KACF,CAAC,EACDb,KAAK,CAAC8B,aAAa,CAAC1B,WAAW,EAAE;MAC/B,YAAY,EAAEY,WAAW,IAAIH,KAAK;MAClCJ,MAAM,EAAEA,MAAM;MACdF,OAAO,EAAEA;IACX,CAAC,CAAC,EACFP,KAAK,CAAC8B,aAAa,CACjB3B,QAAQ,CAAC6B,IAAI,EACb,IAAI,EACJf,QACF,CACF,CAAC;EACH,CAAC;EAED,OAAOC,WAAW;AACpB,CAAC,CAAClB,KAAK,CAACiC,SAAS,CAAC;AAElBf,WAAW,CAACZ,SAAS,GAAGA,SAAS;AAEjCY,WAAW,CAACgB,MAAM,GAAG9B,WAAW;AAEhC,eAAec,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}